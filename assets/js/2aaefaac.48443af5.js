"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[9871],{158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(6393);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),p=l(n),d=i,m=p["".concat(u,".").concat(d)]||p[d]||h[d]||o;return n?r.createElement(m,s(s({ref:t},c),{},{components:n})):r.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a[p]="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(9122),i=n(2501),o=(n(6393),n(158)),s=["components"],a={title:"Contributing"},u=void 0,l={unversionedId:"pages/contributing",id:"pages/contributing",title:"Contributing",description:"Rush is developed in the monorepo for the Rush Stack family of projects:",source:"@site/docs/pages/contributing.md",sourceDirName:"pages",slug:"/pages/contributing",permalink:"/pages/contributing",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/contributing.md",tags:[],version:"current",frontMatter:{title:"Contributing"}},c={},p=[{value:"Testing Rush builds",id:"testing-rush-builds",level:2},{value:"Debugging Rush",id:"debugging-rush",level:2},{value:"Building without unit tests",id:"building-without-unit-tests",level:2}],h={toc:p},d="wrapper";function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)(d,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Rush is developed in the monorepo for the ",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/"},"Rush Stack")," family of projects:"),(0,o.kt)("p",null,"\xa0","\xa0","\xa0","\xa0"," ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack"},"https://github.com/microsoft/rushstack")),(0,o.kt)("p",null,"Contribute to the documentation website in the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io"},"rushstack-websites")," GitHub repo."),(0,o.kt)("p",null,"For general instructions for building Rush and guidelines for submitting PRs, please read the\n",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/pages/contributing/get_started/"},"Contributing")," documentation for the Rush Stack\nmonorepo."),(0,o.kt)("p",null,"The relevant monorepo project folders are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/microsoft/rushstack/tree/main/apps/rush"},"apps/rush")," - the command line interface front end"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/microsoft/rushstack/tree/main/libraries/rush-lib"},"libraries/rush-lib"),' - the automation API and "engine" where all the logic is implemented')),(0,o.kt)("h2",{id:"testing-rush-builds"},"Testing Rush builds"),(0,o.kt)("p",null,"Once you have coded your fix and built your branch (as described in the general ",(0,o.kt)("a",{parentName:"p",href:"https://rushstack.io/pages/contributing/get_started/"},"Contributing")," notes), you will want to test your development build of Rush."),(0,o.kt)("p",null,"Rush features a mechanism called the ",(0,o.kt)("strong",{parentName:"p"},"version selector"),", which reads ",(0,o.kt)("inlineCode",{parentName:"p"},"rushVersion")," from ",(0,o.kt)("strong",{parentName:"p"},"rush.json")," and then automatically installs and invokes that specific version of the engine. Thus if we launch your build of ",(0,o.kt)("inlineCode",{parentName:"p"},"@microsoft/rush"),", it will not actually run your modified code. To bypass the version selector, we need to invoke the ",(0,o.kt)("inlineCode",{parentName:"p"},"@microsoft/rush-lib")," engine directly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd rushstack/libraries/rush-lib\n\nnode ./lib/start.js --help\n")),(0,o.kt)("p",null,"If you want to make it easy invoke your test build from other locations, we recommend to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"testrush")," command."),(0,o.kt)("p",null,"For Bash on Mac OS or Linux:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Substitute the full path to your own build of rush-lib:\nalias testrush="node ~/git/rushstack/libraries/rush-lib/lib/start.js"\n')),(0,o.kt)("p",null,"For Windows, we might create ",(0,o.kt)("inlineCode",{parentName:"p"},"testrush.cmd")," and add it to our system ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'@ECHO OFF\nREM Substitute the full path to your own build of rush-lib:\nnode "C:\\Git\\rushstack\\apps\\rush-lib\\lib\\start.js" %*\n')),(0,o.kt)("h2",{id:"debugging-rush"},"Debugging Rush"),(0,o.kt)("p",null,"The same approach is used to debug Rush using the VS Code debugger. Create a debugger configuration file like this:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"rushstack/libraries/rush-lib/.vscode/launch.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "type": "node",\n      "request": "launch",\n      "name": "Debug Rush",\n      "program": "${workspaceFolder}/lib/start.js",\n      "args": [ "list", "--json" ],  // <====== specify your Rush command line arguments here\n      "cwd": "(repo folder that you want to debug)"  // <===== specify your target working folder here\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"After saving this file, in VS Code click ",(0,o.kt)("em",{parentName:"p"},'"View" --\x3e "Run"'),' and choose your "Debug Rush" configuration from the list. Then click ',(0,o.kt)("em",{parentName:"p"},'"Run" --\x3e "Start Debugging"')," to start debugging. Breakpoints and TypeScript source maps should work correctly."),(0,o.kt)("h2",{id:"building-without-unit-tests"},"Building without unit tests"),(0,o.kt)("p",null,"Rush builds using the ",(0,o.kt)("a",{parentName:"p",href:"https://heft.rushstack.io/"},"Heft")," toolchain. You can invoke the ",(0,o.kt)("inlineCode",{parentName:"p"},"heft")," command-line directly for better additional options."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Full incremental build of Rush and its dependencies, including unit tests\nrush build --to rush-lib --verbose\n\n# Do a quick build of "rush-lib" only without unit tests\ncd rushstack/libraries/rush-lib\n\nrushx build\n')))}m.isMDXComponent=!0}}]);