"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[2440],{158:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(6393);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?r.createElement(h,s(s({ref:n},c),{},{components:t})):r.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2196:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var r=t(9122),a=t(2501),i=(t(6393),t(158)),s=["components"],o={title:"Recommended settings"},l=void 0,p={unversionedId:"pages/maintainer/recommended_settings",id:"pages/maintainer/recommended_settings",title:"Recommended settings",description:"Once your repo is up and running, there are a number of settings in rush.json that",source:"@site/docs/pages/maintainer/recommended_settings.md",sourceDirName:"pages/maintainer",slug:"/pages/maintainer/recommended_settings",permalink:"/pages/maintainer/recommended_settings",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/maintainer/recommended_settings.md",tags:[],version:"current",frontMatter:{title:"Recommended settings"},sidebar:"docsSidebar",previous:{title:"Enabling CI builds",permalink:"/pages/maintainer/enabling_ci_builds"},next:{title:"NPM vs PNPM vs Yarn",permalink:"/pages/maintainer/package_managers"}},c={},u=[{value:"repository.url",id:"repositoryurl",level:2},{value:"ensureConsistentVersions",id:"ensureconsistentversions",level:2},{value:"strictPeerDependencies",id:"strictpeerdependencies",level:2}],m={toc:u},d="wrapper";function h(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Once your repo is up and running, there are a number of settings in ",(0,i.kt)("strong",{parentName:"p"},"rush.json")," that\nwe recommend enabling. These stricter settings help to improve repo health and reduce\nmaintenance headaches. They are disabled by default because they sometimes require\nsome fixes to your code base, and may not be appropriate for all situations."),(0,i.kt)("h2",{id:"repositoryurl"},"repository.url"),(0,i.kt)("p",null,"If your repo uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"rush change")," command to track change logs, we strongly recommend to set\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"repository.url")," in your ",(0,i.kt)("strong",{parentName:"p"},"rush.json"),". This ensures that ",(0,i.kt)("inlineCode",{parentName:"p"},"rush change"),' will be able to\naccurately find the base branch for comparison, especially in situations where the developer\'s\nrepo has been "forked" from the main repo.'),(0,i.kt)("p",null,"Example excerpt from ",(0,i.kt)("strong",{parentName:"p"},"rush.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'  "repository": {\n    // Replace this with the URL that you use when running "git clone" for your repo\n    "url": "https://github.com/microsoft/rush-example"\n  }\n')),(0,i.kt)("h2",{id:"ensureconsistentversions"},"ensureConsistentVersions"),(0,i.kt)("p",null,"We recommend to set ",(0,i.kt)("inlineCode",{parentName:"p"},"ensureConsistentVersions")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in ",(0,i.kt)("strong",{parentName:"p"},"rush.json"),". This causes\nRush to automatically perform the ",(0,i.kt)("inlineCode",{parentName:"p"},"rush check")," validation whenever any of the following\ncommands are invoked:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rush install")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rush update")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rush link")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rush version")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rush publish"))),(0,i.kt)("p",null,"This validation checks each project's ",(0,i.kt)("strong",{parentName:"p"},"package.json")," file and ensures that all dependencies\nare of the same version throughout the repository. This is desirable in general and avoids\na lot of problems related to inconsistent versions."),(0,i.kt)("p",null,"Sometimes there are special cases where multiple versions are desirable. For example,\nmaybe you want upgrade your projects to the new TypeScript compiler in stages, rather than\nall at once. During this transition, you may need two different ",(0,i.kt)("inlineCode",{parentName:"p"},"typescript")," releases\ninstalled for your repo. For those exceptions, you can add an entry to the\n",(0,i.kt)("inlineCode",{parentName:"p"},"allowedAlternativeVersions")," section of the ",(0,i.kt)("strong",{parentName:"p"},"common-versions.json"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NOTE: In earlier releases of Rush, the CI script examples included ",(0,i.kt)("inlineCode",{parentName:"p"},"rush check")," as\na build step. The ",(0,i.kt)("inlineCode",{parentName:"p"},"ensureConsistentVersions")," setting removes the need for that.\nIf you enable ",(0,i.kt)("inlineCode",{parentName:"p"},"ensureConsistentVersions"),", then you can delete ",(0,i.kt)("inlineCode",{parentName:"p"},"rush check")," from your\nCI build steps.")),(0,i.kt)("h2",{id:"strictpeerdependencies"},"strictPeerDependencies"),(0,i.kt)("p",null,"If you're using the PNPM package manager, we strongly recommend setting ",(0,i.kt)("inlineCode",{parentName:"p"},"strictPeerDependencies"),"\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in ",(0,i.kt)("strong",{parentName:"p"},"pnpm-config.json"),". This causes Rush to use PNPM's ",(0,i.kt)("inlineCode",{parentName:"p"},"--strict-peer-dependencies")," option\nduring installation. With this protection, ",(0,i.kt)("inlineCode",{parentName:"p"},"rush install")," will fail if there are unsatisfied\npeer dependencies, which is an invalid state that can cause build failures or incompatible\ndependency versions. (For historical reasons, JavaScript package managers generally do not treat\nthis invalid state as an error.)"))}h.isMDXComponent=!0}}]);