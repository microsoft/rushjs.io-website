"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[9624],{158:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(6393);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(t),d=i,f=u["".concat(l,".").concat(d)]||u[d]||h[d]||s;return t?a.createElement(f,r(r({ref:n},c),{},{components:t})):a.createElement(f,r({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,r=new Array(s);r[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var p=2;p<s;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6829:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>p,toc:()=>u});var a=t(9122),i=t(2501),s=(t(6393),t(158)),r=["components"],o={title:"rush publish"},l=void 0,p={unversionedId:"pages/commands/rush_publish",id:"pages/commands/rush_publish",title:"rush publish",description:"See also",source:"@site/docs/pages/commands/rush_publish.md",sourceDirName:"pages/commands",slug:"/pages/commands/rush_publish",permalink:"/pages/commands/rush_publish",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/commands/rush_publish.md",tags:[],version:"current",frontMatter:{title:"rush publish"},sidebar:"docsSidebar",previous:{title:"rush list",permalink:"/pages/commands/rush_list"},next:{title:"rush purge",permalink:"/pages/commands/rush_purge"}},c={},u=[{value:"See also",id:"see-also",level:2}],h={toc:u},d="wrapper";function f(e){var n=e.components,t=(0,i.Z)(e,r);return(0,s.kt)(d,(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'usage: rush publish [-h] [-a] [-b BRANCH] [-p] [--add-commit-details]\n                    [--regenerate-changelogs] [-r REGISTRY] [-n TOKEN]\n                    [-t TAG] [--set-access-level {public,restricted}] [--pack]\n                    [--release-folder FOLDER] [--include-all]\n                    [--version-policy POLICY] [--prerelease-name NAME]\n                    [--partial-prerelease] [--suffix SUFFIX] [--force]\n                    [--apply-git-tags-on-pack] [-c COMMIT_ID]\n                    [--ignore-git-hooks]\n\n\nReads and processes package publishing change requests generated by "rush\nchange". This will perform a read-only operation by default, printing\noperations executed to the console. To commit changes and publish packages,\nyou must use the --commit flag and/or the --publish flag.\n\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  -a, --apply           If this flag is specified, the change requests will\n                        be applied to package.json files.\n  -b BRANCH, --target-branch BRANCH\n                        If this flag is specified, applied changes and\n                        deleted change requests will be committed and merged\n                        into the target branch.\n  -p, --publish         If this flag is specified, applied changes will be\n                        published to the NPM registry.\n  --add-commit-details  Adds commit author and hash to the changelog.json\n                        files for each change.\n  --regenerate-changelogs\n                        Regenerates all changelog files based on the current\n                        JSON content.\n  -r REGISTRY, --registry REGISTRY\n                        Publishes to a specified NPM registry. If this is\n                        specified, it will prevent the current commit will\n                        not be tagged.\n  -n TOKEN, --npm-auth-token TOKEN\n                        (DEPRECATED) Specifies the authentication token to\n                        use during publishing. This parameter is deprecated\n                        because command line parameters may be readable by\n                        unrelated processes on a lab machine. Instead, a\n                        safer practice is to pass the token via an\n                        environment variable and reference it from your\n                        common/config/rush/.npmrc-publish file.\n  -t TAG, --tag TAG     The tag option to pass to npm publish. By default NPM\n                        will publish using the \'latest\' tag, even if the\n                        package is older than the current latest, so in\n                        publishing workflows for older releases, providing a\n                        tag is important. When hotfix changes are made, this\n                        parameter defaults to \'hotfix\'.\n  --set-access-level {public,restricted}\n                        By default, when Rush invokes "npm publish" it will\n                        publish scoped packages with an access level of\n                        "restricted". Scoped packages can be published with\n                        an access level of "public" by specifying that value\n                        for this flag with the initial publication. NPM\n                        always publishes unscoped packages with an access\n                        level of "public". For more information, see the NPM\n                        documentation for the "--access" option of "npm\n                        publish".\n  --pack                Packs projects into tarballs instead of publishing to\n                        npm repository. It can only be used when\n                        --include-all is specified. If this flag is specified,\n                         NPM registry related parameters will be ignored.\n  --release-folder FOLDER\n                        This parameter is used with --pack parameter to\n                        provide customized location for the tarballs instead\n                        of the default value.\n  --include-all         If this flag is specified, all packages with\n                        shouldPublish=true in rush.json or with a specified\n                        version policy will be published if their version is\n                        newer than published version.\n  --version-policy POLICY\n                        Version policy name. Only projects with this version\n                        policy will be published if used with --include-all.\n  --prerelease-name NAME\n                        Bump up to a prerelease version with the provided\n                        prerelease name. Cannot be used with --suffix\n  --partial-prerelease  Used with --prerelease-name. Only bump packages to a\n                        prerelease version if they have changes.\n  --suffix SUFFIX       Append a suffix to all changed versions. Cannot be\n                        used with --prerelease-name.\n  --force               If this flag is specified with --publish, packages\n                        will be published with --force on npm\n  --apply-git-tags-on-pack\n                        If specified with --publish and --pack, git tags will\n                        be applied for packages as if a publish was being run\n                        without --pack.\n  -c COMMIT_ID, --commit COMMIT_ID\n                        Used in conjunction with git tagging -- apply git\n                        tags at the commit hash specified. If not provided,\n                        the current HEAD will be tagged.\n  --ignore-git-hooks    Skips execution of all git hooks. Make sure you know\n                        what you are skipping.\n')),(0,s.kt)("h2",{id:"see-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/maintainer/publishing"},"Publishing packages")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/commands/rush_version"},"rush version"))))}f.isMDXComponent=!0}}]);