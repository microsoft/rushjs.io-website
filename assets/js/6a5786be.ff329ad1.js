"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[4723],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(6393);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(n),u=s,m=d["".concat(l,".").concat(u)]||d[u]||h[u]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:s,i[1]=a;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5090:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=n(9122),s=n(2501),o=(n(6393),n(158)),i=["components"],a={title:"rush list"},l=void 0,c={unversionedId:"pages/commands/rush_list",id:"pages/commands/rush_list",title:"rush list",description:"",source:"@site/docs/pages/commands/rush_list.md",sourceDirName:"pages/commands",slug:"/pages/commands/rush_list",permalink:"/pages/commands/rush_list",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/commands/rush_list.md",tags:[],version:"current",frontMatter:{title:"rush list"},sidebar:"docsSidebar",previous:{title:"rush link",permalink:"/pages/commands/rush_link"},next:{title:"rush publish",permalink:"/pages/commands/rush_publish"}},p={},d=[],h={toc:d},u="wrapper";function m(e){var t=e.components,n=(0,s.Z)(e,i);return(0,o.kt)(u,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'usage: rush list [-h] [-v] [-p] [--full-path] [--detailed] [--json]\n                 [-t PROJECT] [-T PROJECT] [-f PROJECT] [-o PROJECT]\n                 [-i PROJECT] [-I PROJECT]\n                 [--to-version-policy VERSION_POLICY_NAME]\n                 [--from-version-policy VERSION_POLICY_NAME]\n\n\nList package names, and optionally version (--version) and path (--path) or\nfull path (--full-path), for projects in the current rush config.\n\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  -v, --version         If this flag is specified, the project version will\n                        be displayed in a column along with the package name.\n  -p, --path            If this flag is specified, the project path will be\n                        displayed in a column along with the package name.\n  --full-path           If this flag is specified, the project full path will\n                        be displayed in a column along with the package name.\n  --detailed            For the non --json view, if this flag is specified,\n                        include path (-p), version (-v) columns along with\n                        the project\'s applicable: versionPolicy,\n                        versionPolicyName, shouldPublish, reviewPolicy, and\n                        tags fields.\n  --json                If this flag is specified, output will be in JSON\n                        format.\n  -t PROJECT, --to PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--to" parameter expands\n                        this selection to include PROJECT and all its\n                        dependencies. "." can be used as shorthand for the\n                        project in the current working directory. For details,\n                         refer to the website article "Selecting subsets of\n                        projects".\n  -T PROJECT, --to-except PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--to-except" parameter\n                        expands this selection to include all dependencies of\n                        PROJECT, but not PROJECT itself. "." can be used as\n                        shorthand for the project in the current working\n                        directory. For details, refer to the website article\n                        "Selecting subsets of projects".\n  -f PROJECT, --from PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--from" parameter expands\n                        this selection to include PROJECT and all projects\n                        that depend on it, plus all dependencies of this set.\n                        "." can be used as shorthand for the project in the\n                        current working directory. For details, refer to the\n                        website article "Selecting subsets of projects".\n  -o PROJECT, --only PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--only" parameter expands\n                        this selection to include PROJECT; its dependencies\n                        are not added. "." can be used as shorthand for the\n                        project in the current working directory. Note that\n                        this parameter is "unsafe" as it may produce a\n                        selection that excludes some dependencies. For\n                        details, refer to the website article "Selecting\n                        subsets of projects".\n  -i PROJECT, --impacted-by PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--impacted-by" parameter\n                        expands this selection to include PROJECT and any\n                        projects that depend on PROJECT (and thus might be\n                        broken by changes to PROJECT). "." can be used as\n                        shorthand for the project in the current working\n                        directory. Note that this parameter is "unsafe" as it\n                        may produce a selection that excludes some\n                        dependencies. For details, refer to the website\n                        article "Selecting subsets of projects".\n  -I PROJECT, --impacted-by-except PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--impacted-by-except"\n                        parameter works the same as "--impacted-by" except\n                        that PROJECT itself is not added to the selection. ".\n                        " can be used as shorthand for the project in the\n                        current working directory. Note that this parameter\n                        is "unsafe" as it may produce a selection that\n                        excludes some dependencies. For details, refer to the\n                        website article "Selecting subsets of projects".\n  --to-version-policy VERSION_POLICY_NAME\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. The "--to-version-policy"\n                        parameter is equivalent to specifying "--to" for each\n                        of the projects belonging to VERSION_POLICY_NAME. For\n                        details, refer to the website article "Selecting\n                        subsets of projects".\n  --from-version-policy VERSION_POLICY_NAME\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. The "--from-version-policy"\n                        parameter is equivalent to specifying "--from" for\n                        each of the projects belonging to VERSION_POLICY_NAME.\n                         For details, refer to the website article "Selecting\n                        subsets of projects".\n')))}m.isMDXComponent=!0}}]);