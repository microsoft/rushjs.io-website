"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[2563],{158:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(6393);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),u=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(t),h=r,d=c["".concat(l,".").concat(h)]||c[h]||m[h]||i;return t?a.createElement(d,o(o({ref:n},p),{},{components:t})):a.createElement(d,o({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=h;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},4272:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var a=t(9122),r=t(2501),i=(t(6393),t(158)),o=["components"],s={title:"Enabling CI builds"},l=void 0,u={unversionedId:"pages/maintainer/enabling_ci_builds",id:"pages/maintainer/enabling_ci_builds",title:"Enabling CI builds",description:"When you set up a PR build definition for continuous integration, the automated script can run essentially the same commands that a developer invokes manually. But there are some additional options that you may find useful.",source:"@site/docs/pages/maintainer/enabling_ci_builds.md",sourceDirName:"pages/maintainer",slug:"/pages/maintainer/enabling_ci_builds",permalink:"/pages/maintainer/enabling_ci_builds",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/maintainer/enabling_ci_builds.md",tags:[],version:"current",frontMatter:{title:"Enabling CI builds"},sidebar:"docsSidebar",previous:{title:"Adding projects to a repo",permalink:"/pages/maintainer/add_to_repo"},next:{title:"Recommended settings",permalink:"/pages/maintainer/recommended_settings"}},p={},c=[{value:"install-run-rush.js for bootstrapping Rush",id:"install-run-rushjs-for-bootstrapping-rush",level:2},{value:"install-run.js for other commands",id:"install-runjs-for-other-commands",level:2},{value:"GitHub Actions example from &quot;rush init&quot;",id:"github-actions-example-from-rush-init",level:2}],m={toc:c},h="wrapper";function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)(h,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When you set up a PR build definition for continuous integration, the automated script can run essentially the same commands that a developer invokes manually. But there are some additional options that you may find useful."),(0,i.kt)("p",null,"If we were invoking these commands manually, it might look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Fetch the main branch\ngit fetch origin main:refs/remotes/origin/main -a\n\n# (optional) Fail if the developer didn\'t create a required change log.\n# By "fail", we mean that the script will stop because Rush returned\n# a nonzero exit code.\nrush change -v\n\n# Install NPM packages in the common folder, but don\'t automatically do "rush link"\nrush install --no-link\n\n# Run "rush link" explicitly, so your CI system can measure it as a separate step\nrush link\n\n# Do a full "ship" build, showing detailed logs in real time\n# (We assume "--ship" was defined in common/config/rush/command-line.json)\nrush rebuild --ship --verbose\n')),(0,i.kt)("p",null,"But there's one hitch -- what if your CI environment doesn't come with Rush preinstalled?\nYou might consider sticking a ",(0,i.kt)("strong",{parentName:"p"},"package.json")," at the root of your repo, and then invoking\n",(0,i.kt)("inlineCode",{parentName:"p"},"npm install")," to install Rush. Unfortunately this would introduce a phantom ",(0,i.kt)("strong",{parentName:"p"},"node_modules"),"\nfolder, which defeats Rush's protection against\n",(0,i.kt)("a",{parentName:"p",href:"/pages/advanced/phantom_deps"},"phantom dependencies"),"."),(0,i.kt)("h2",{id:"install-run-rushjs-for-bootstrapping-rush"},"install-run-rush.js for bootstrapping Rush"),(0,i.kt)("p",null,"Fortunately there's a more elegant solution for getting Rush installed on a CI machine:\nAll Rush repos come with a script ",(0,i.kt)("inlineCode",{parentName:"p"},"common/scripts/install-run-rush.js")," that will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"find your ",(0,i.kt)("strong",{parentName:"li"},"rush.json")," file"),(0,i.kt)("li",{parentName:"ul"},"read the ",(0,i.kt)("inlineCode",{parentName:"li"},"rushVersion")," that's specified there"),(0,i.kt)("li",{parentName:"ul"},"automatically install that version of Rush under the ",(0,i.kt)("strong",{parentName:"li"},"common/temp/install-run")," folder"),(0,i.kt)("li",{parentName:"ul"},"using the appropriate settings from your repo's .npmrc file"),(0,i.kt)("li",{parentName:"ul"},"...and then invoke the Rush tool, passing along any command-line parameters that you provided")),(0,i.kt)("p",null,"The installation is cached, so this is not any slower than invoking Rush normally. In fact,\nfor CI systems that preserve files from previous runs, ",(0,i.kt)("strong",{parentName:"p"},"install-run-rush.js")," is faster\nthan ",(0,i.kt)("inlineCode",{parentName:"p"},"npm install")," because it can cache different versions of Rush depending on the Git branch\nbeing built."),(0,i.kt)("p",null,"Try executing the script from your shell:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"~$ cd my-repo\n~/my-repo$ node common/scripts/install-run-rush.js --help\n~/my-repo$ node common/scripts/install-run-rush.js install\n")),(0,i.kt)("p",null,"Below we'll show how to incorporate this into a Travis build definition."),(0,i.kt)("h2",{id:"install-runjs-for-other-commands"},"install-run.js for other commands"),(0,i.kt)("p",null,"By the way, Rush provides a second script ",(0,i.kt)("strong",{parentName:"p"},"install-run.js")," that allows you to use this same\ntechnology with arbitrary NPM packages. For example, here's a command that prints a QR code\nfor the Rush web site: :-)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"~/my-repo$ node common/scripts/install-run.js qrcode@1.2.2 qrcode https://rushjs.io\n")),(0,i.kt)("p",null,"Note that the ",(0,i.kt)("strong",{parentName:"p"},"install-run.js")," command line is a little different: It must include the\npackage name and version (which can be a SemVer range, although it's best to avoid nondeterminism).\nIt also needs a second parameter that specifies the name of the executable binary (even though\nthe binary name is often the same as the package name). In the above example, we're invoking the\n",(0,i.kt)("inlineCode",{parentName:"p"},"qrcode")," binary and its command-line parameter is ",(0,i.kt)("inlineCode",{parentName:"p"},"https://rushjs.io"),"."),(0,i.kt)("p",null,"Of course, a more straightforward approach would be to specify ",(0,i.kt)("strong",{parentName:"p"},"qrcode")," as an ordinary dependency\nof a ",(0,i.kt)("strong",{parentName:"p"},"package.json")," file somewhere, for example a ",(0,i.kt)("strong",{parentName:"p"},"tools/repo-scripts")," project. That way it can\npart of your normal installation, and tracked by your repo's shrinkwrap file. But in some cases\nthat is undesirable, for example scripts that are only used by a lightweight CI job that doesn't\nrequire a ",(0,i.kt)("inlineCode",{parentName:"p"},"rush install"),". or Git hooks that need to work correctly even when the ",(0,i.kt)("inlineCode",{parentName:"p"},"rush install")," state\nis broken or outdated."),(0,i.kt)("h2",{id:"github-actions-example-from-rush-init"},'GitHub Actions example from "rush init"'),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/features/actions"},"GitHub Actions")," is a continuous integration build service that integrates\nwith GitHub and is free for open source projects. The ",(0,i.kt)("inlineCode",{parentName:"p"},"rush init")," command creates a ",(0,i.kt)("strong",{parentName:"p"},"ci.yml")," pipeline\nthat's a good starting point if you use this service. Note how it uses ",(0,i.kt)("strong",{parentName:"p"},"install-run-rush.js"),"\nto invoke the Rush tool:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},".github/workflows/ci.yml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"name: CI\non:\n  push:\n    branches: ['main']\n  pull_request:\n    branches: ['main']\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n        with:\n          fetch-depth: 2\n      - name: Git config user\n        uses: snow-actions/git-config-user@v1.0.0\n        with:\n          name: # Service Account's Name\n          email: # Service Account's Email Address\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 16\n      - name: Verify Change Logs\n        run: node common/scripts/install-run-rush.js change --verify\n      - name: Rush Install\n        run: node common/scripts/install-run-rush.js install\n      - name: Rush rebuild\n        run: node common/scripts/install-run-rush.js rebuild --verbose --production\n")),(0,i.kt)("p",null,"For an example of an equivalent setup using an Azure DevOps build pipeline, take a look at the\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/microsoft/rushstack/blob/main/common/config/azure-pipelines/templates/build.yaml"},"build.yaml file"),",\nin the monorepo where Rush is developed."))}d.isMDXComponent=!0}}]);