"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[4708],{158:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var o=t(6393);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},h=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(t),h=r,m=p["".concat(l,".").concat(h)]||p[h]||u[h]||s;return t?o.createElement(m,a(a({ref:n},d),{},{components:t})):o.createElement(m,a({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=h;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:r,a[1]=i;for(var c=2;c<s;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}h.displayName="MDXCreateElement"},2830:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var o=t(9122),r=t(2501),s=(t(6393),t(158)),a=["components"],i={title:"deploy.json"},l=void 0,c={unversionedId:"pages/configs/deploy_json",id:"pages/configs/deploy_json",title:"deploy.json",description:"This is the template that rush init-deploy",source:"@site/docs/pages/configs/deploy_json.md",sourceDirName:"pages/configs",slug:"/pages/configs/deploy_json",permalink:"/pages/configs/deploy_json",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/configs/deploy_json.md",tags:[],version:"current",frontMatter:{title:"deploy.json"},sidebar:"docsSidebar",previous:{title:"custom-tips.json (experimental)",permalink:"/pages/configs/custom-tips_json"},next:{title:"experiments.json",permalink:"/pages/configs/experiments_json"}},d={},p=[{value:"See also",id:"see-also",level:2}],u={toc:p},h="wrapper";function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,s.kt)(h,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This is the template that ",(0,s.kt)("a",{parentName:"p",href:"/pages/commands/rush_init-deploy"},"rush init-deploy"),"\ngenerates for ",(0,s.kt)("strong",{parentName:"p"},"deploy.json")," and ",(0,s.kt)("strong",{parentName:"p"},"deploy-","<","scenario name",">",">.json"),":"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"common/config/rush/deploy.json")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * This configuration file defines a deployment scenario for use with the "rush deploy" command.\n * The default scenario file path is "deploy.json"; additional files use the naming pattern\n * "deploy-<scenario-name>.json". For full documentation, please see https://rushjs.io\n */\n{\n  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/deploy-scenario.schema.json",\n\n  /**\n   * The "rush deploy" command prepares a deployment folder, starting from the main project and collecting\n   * all of its dependencies (both NPM packages and other Rush projects).  The main project is specified\n   * using the "--project" parameter.  The "deploymentProjectNames" setting lists the allowable choices for\n   * the "--project" parameter; this documents the intended deployments for your monorepo and helps validate\n   * that "rush deploy" is invoked correctly.  If there is only one item in the "deploymentProjectNames" array,\n   * then "--project" can be omitted.  The names should be complete package names as declared in rush.json.\n   *\n   * If the main project should include other unrelated Rush projects, add it to the "projectSettings" section,\n   * and then specify those projects in the "additionalProjectsToInclude" list.\n   */\n  "deploymentProjectNames": [ /* YOUR PROJECT HERE */ ],\n\n  /**\n   * When deploying a local Rush project, the package.json "devDependencies" are normally excluded.\n   * If you want to include them, set "includeDevDependencies" to true.\n   *\n   * The default value is false.\n   */\n  // "includeDevDependencies": true,\n\n  /**\n   * When deploying a local Rush project, normally the .npmignore filter is applied so that Rush only copies\n   * files that would be packaged by "npm pack".  Setting "includeNpmIgnoreFiles" to true will disable this\n   * filtering so that all files are copied (with a few trivial exceptions such as the "node_modules" folder).\n   *\n   * The default value is false.\n   */\n  // "includeNpmIgnoreFiles": true,\n\n  /**\n   * To improve backwards compatibility with legacy packages, the PNPM package manager installs extra links in the\n   * node_modules folder that enable packages to import undeclared dependencies.  In some cases this workaround may\n   * double the number of links created.  If your deployment does not require this workaround, you can set\n   * "omitPnpmWorkaroundLinks" to true to avoid creating the extra links.\n   *\n   * The default value is false.\n   */\n  // "omitPnpmWorkaroundLinks": true,\n\n  /**\n   * Specify how links (symbolic links, hard links, and/or NTFS junctions) will be created in the deployed folder:\n   *\n   * - "default": Create the links while copying the files; this is the default behavior.\n   * - "script": A Node.js script called "create-links.js" will be written.  When executed, this script will\n   *   create the links described in the "deploy-metadata.json" output file.\n   * - "none": Do nothing; some other tool may create the links later.\n   */\n  // "linkCreation": "script",\n\n  /**\n   * If this path is specified, then after "rush deploy", recursively copy the files from this folder to\n   * the deployment target folder (common/deploy). This can be used to provide additional configuration files\n   * or scripts needed by the server when deploying. The path is resolved relative to the repository root.\n   */\n  //  "folderToCopy": "repo-tools/assets/deploy-config",\n\n  /**\n   * Customize how Rush projects are processed during deployment.\n   */\n  "projectSettings": [\n    // {\n    //   /**\n    //    * The full package name of the project, which must be declared in rush.json.\n    //    */\n    //   "projectName": "@my-scope/my-project",\n    //\n    //   /**\n    //    * A list of additional local Rush projects to be deployed with this project (beyond the package.json\n    //    * dependencies).  Specify full package names, which must be declared in rush.json.\n    //    */\n    //   "additionalProjectsToInclude": [\n    //     // "@my-scope/my-project2"\n    //   ],\n    //\n    //   /**\n    //    * When deploying a project, the included dependencies are normally determined automatically based on\n    //    * package.json fields such as "dependencies", "peerDependencies", and "optionalDependencies",\n    //    * subject to other deployment settings such as "includeDevDependencies".  However, in cases where\n    //    * that information is not accurate, you can use "additionalDependenciesToInclude" to add more\n    //    * packages to the list.\n    //    *\n    //    * The list can include any package name that is installed by Rush and resolvable via Node.js module\n    //    * resolution; however, if it resolves to a local Rush project, the "additionalProjectsToInclude"\n    //    * field will not be recursively applied.\n    //    */\n    //   "additionalDependenciesToInclude": [\n    //     // "@rushstack/node-core-library"\n    //   ],\n    //\n    //   /**\n    //    * This setting prevents specific dependencies from being deployed.  It only filters dependencies that\n    //    * are explicitly declared in package.json for this project.  It does not affect dependencies added\n    //    * via "additionalProjectsToInclude" or "additionalDependenciesToInclude", nor does it affect indirect\n    //    * dependencies.\n    //    *\n    //    * The "*" wildcard may be used to match zero or more characters.  For example, if your project already\n    //    * bundles its own dependencies, specify "dependenciesToExclude": [ "*" ] to exclude all package.json\n    //    * dependencies.\n    //    */\n    //   "dependenciesToExclude": [\n    //     // "@types/*"\n    //   ]\n    // }\n  ]\n}\n')),(0,s.kt)("h2",{id:"see-also"},"See also"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/maintainer/deploying"},"Deploying projects")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/pages/commands/rush_deploy"},"rush deploy")," command-line parameters")))}m.isMDXComponent=!0}}]);