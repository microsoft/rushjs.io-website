"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[2570],{158:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(6393);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),h=s,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=n(9122),s=n(2501),o=(n(6393),n(158)),a=["components"],i={title:"rush rebuild"},l=void 0,c={unversionedId:"pages/commands/rush_rebuild",id:"pages/commands/rush_rebuild",title:"rush rebuild",description:"See also",source:"@site/docs/pages/commands/rush_rebuild.md",sourceDirName:"pages/commands",slug:"/pages/commands/rush_rebuild",permalink:"/pages/commands/rush_rebuild",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/commands/rush_rebuild.md",tags:[],version:"current",frontMatter:{title:"rush rebuild"},sidebar:"docsSidebar",previous:{title:"rush purge",permalink:"/pages/commands/rush_purge"},next:{title:"rush remove",permalink:"/pages/commands/rush_remove"}},p={},d=[{value:"See also",id:"see-also",level:2}],u={toc:d},h="wrapper";function m(e){var t=e.components,n=(0,s.Z)(e,a);return(0,o.kt)(h,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'usage: rush rebuild [-h] [-p COUNT] [--timeline] [-t PROJECT] [-T PROJECT]\n                    [-f PROJECT] [-o PROJECT] [-i PROJECT] [-I PROJECT]\n                    [--to-version-policy VERSION_POLICY_NAME]\n                    [--from-version-policy VERSION_POLICY_NAME] [-v]\n                    [--ignore-hooks]\n\n\nThis command assumes that the package.json file for each project contains a\n"scripts" entry for "npm run build" that performs a full clean build. Rush\ninvokes this script to build each project that is registered in rush.json.\nProjects are built in parallel where possible, but always respecting the\ndependency graph for locally linked projects. The number of simultaneous\nprocesses will be based on the number of machine cores unless overridden by\nthe --parallelism flag. (For an incremental build, see "rush build" instead\nof "rush rebuild".)\n\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  -p COUNT, --parallelism COUNT\n                        Specifies the maximum number of concurrent processes\n                        to launch during a build. The COUNT should be a\n                        positive integer, a percentage value (eg. "50%") or\n                        the word "max" to specify a count that is equal to\n                        the number of CPU cores. If this parameter is omitted,\n                         then the default value depends on the operating\n                        system and number of CPU cores. This parameter may\n                        alternatively be specified via the RUSH_PARALLELISM\n                        environment variable.\n  --timeline            After the build is complete, print additional\n                        statistics and CPU usage information, including an\n                        ASCII chart of the start and stop times for each\n                        operation.\n  -t PROJECT, --to PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--to" parameter expands\n                        this selection to include PROJECT and all its\n                        dependencies. "." can be used as shorthand for the\n                        project in the current working directory. For details,\n                         refer to the website article "Selecting subsets of\n                        projects".\n  -T PROJECT, --to-except PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--to-except" parameter\n                        expands this selection to include all dependencies of\n                        PROJECT, but not PROJECT itself. "." can be used as\n                        shorthand for the project in the current working\n                        directory. For details, refer to the website article\n                        "Selecting subsets of projects".\n  -f PROJECT, --from PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--from" parameter expands\n                        this selection to include PROJECT and all projects\n                        that depend on it, plus all dependencies of this set.\n                        "." can be used as shorthand for the project in the\n                        current working directory. For details, refer to the\n                        website article "Selecting subsets of projects".\n  -o PROJECT, --only PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--only" parameter expands\n                        this selection to include PROJECT; its dependencies\n                        are not added. "." can be used as shorthand for the\n                        project in the current working directory. Note that\n                        this parameter is "unsafe" as it may produce a\n                        selection that excludes some dependencies. For\n                        details, refer to the website article "Selecting\n                        subsets of projects".\n  -i PROJECT, --impacted-by PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--impacted-by" parameter\n                        expands this selection to include PROJECT and any\n                        projects that depend on PROJECT (and thus might be\n                        broken by changes to PROJECT). "." can be used as\n                        shorthand for the project in the current working\n                        directory. Note that this parameter is "unsafe" as it\n                        may produce a selection that excludes some\n                        dependencies. For details, refer to the website\n                        article "Selecting subsets of projects".\n  -I PROJECT, --impacted-by-except PROJECT\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. Each "--impacted-by-except"\n                        parameter works the same as "--impacted-by" except\n                        that PROJECT itself is not added to the selection. ".\n                        " can be used as shorthand for the project in the\n                        current working directory. Note that this parameter\n                        is "unsafe" as it may produce a selection that\n                        excludes some dependencies. For details, refer to the\n                        website article "Selecting subsets of projects".\n  --to-version-policy VERSION_POLICY_NAME\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. The "--to-version-policy"\n                        parameter is equivalent to specifying "--to" for each\n                        of the projects belonging to VERSION_POLICY_NAME. For\n                        details, refer to the website article "Selecting\n                        subsets of projects".\n  --from-version-policy VERSION_POLICY_NAME\n                        Normally all projects in the monorepo will be\n                        processed; adding this parameter will instead select\n                        a subset of projects. The "--from-version-policy"\n                        parameter is equivalent to specifying "--from" for\n                        each of the projects belonging to VERSION_POLICY_NAME.\n                         For details, refer to the website article "Selecting\n                        subsets of projects".\n  -v, --verbose         Display the logs during the build, rather than just\n                        displaying the build status summary\n  --ignore-hooks        Skips execution of the "eventHooks" scripts defined\n                        in rush.json. Make sure you know what you are\n                        skipping.\n')),(0,o.kt)("h2",{id:"see-also"},"See also"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/pages/developer/selecting_subsets"},"Selecting subsets of projects")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/pages/commands/rush_build"},"rush build"))))}m.isMDXComponent=!0}}]);