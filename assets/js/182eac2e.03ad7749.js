"use strict";(self.webpackChunkrushjs_io=self.webpackChunkrushjs_io||[]).push([[5333],{158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(6393);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=n(9122),o=n(2501),a=(n(6393),n(158)),i=["components"],s={title:"rush init-deploy"},l=void 0,p={unversionedId:"pages/commands/rush_init-deploy",id:"pages/commands/rush_init-deploy",title:"rush init-deploy",description:"See also",source:"@site/docs/pages/commands/rush_init-deploy.md",sourceDirName:"pages/commands",slug:"/pages/commands/rush_init-deploy",permalink:"/pages/commands/rush_init-deploy",draft:!1,editUrl:"https://github.com/microsoft/rushstack-websites/tree/main/websites/rushjs.io/docs/pages/commands/rush_init-deploy.md",tags:[],version:"current",frontMatter:{title:"rush init-deploy"},sidebar:"docsSidebar",previous:{title:"rush init-autoinstaller",permalink:"/pages/commands/rush_init-autoinstaller"},next:{title:"rush install",permalink:"/pages/commands/rush_install"}},c={},u=[{value:"See also",id:"see-also",level:2}],m={toc:u},d="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'usage: rush init-deploy [-h] -p PROJECT_NAME [-s SCENARIO]\n\nUse this command to initialize a new scenario config file for use with "rush\ndeploy". The default filename is common/config/rush/deploy.json. However, if\nyou need to manage multiple deployments with different settings, you can use\nuse "--scenario" to create additional config files.\n\nOptional arguments:\n  -h, --help            Show this help message and exit.\n  -p PROJECT_NAME, --project PROJECT_NAME\n                        Specifies the name of the main Rush project to be\n                        deployed in this scenario. It will be added to the\n                        "deploymentProjectNames" setting.\n  -s SCENARIO, --scenario SCENARIO\n                        By default, the deployment configuration will be\n                        written to "common/config/rush/deploy.json". You can\n                        use "--scenario" to specify an alternate name. The\n                        name must be lowercase and separated by dashes. For\n                        example, if the name is "web", then the config file\n                        would be "common/config/rush/deploy-web.json".\n')),(0,a.kt)("h2",{id:"see-also"},"See also"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/pages/maintainer/deploying"},"Deploying projects")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/pages/configs/deploy_json"},"deploy.json")," config file"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/pages/commands/rush_deploy"},"rush deploy")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/pages/commands/rush_init"},"rush init"))))}f.isMDXComponent=!0}}]);